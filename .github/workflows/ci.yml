name: Continuous Integration
'on':
  - push
  - pull_request
jobs:
  test:
    name: Run tests
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node-version:
          - 12.x
          - 14.x
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Generate SSL certificates
        env:
          SERVER_CRT: ${{ secrets.SERVER_CRT }}
          SERVER_KEY: ${{ secrets.SERVER_KEY }}
        run: |
          mkdir ssl
          echo "$SERVER_CRT" > ssl/server.crt
          echo "$SERVER_KEY" > ssl/server.key
      - name: 'Setup Node.js ${{ matrix.node-version }}'
        uses: actions/setup-node@v1
        with:
          node-version: '${{ matrix.node-version }}'
      - name: Get Yarn cache path
        id: yarn-cache-dir-path
        run: 'echo "::set-output name=dir::$(yarn cache dir)"'
      - name: Cache Yarn cache
        id: cache-yarn-cache
        uses: actions/cache@v1
        with:
          path: '${{ steps.yarn-cache-dir-path.outputs.dir }}'
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-yarn-
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
      - name: Run Linting
        run: yarn lint
      - name: Run tests
        run: yarn test:ember
